---

- hosts: semaphore
  become: true

  tasks:
    - name: Add docker apt-key
      shell: curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/trusted.gpg.d/docker.gpg
      args:
        creates: /etc/apt/trusted.gpg.d/docker.gpg

    - name: Add Docker APT repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable
        state: present
        filename: 'docker'

    - name: Install docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: true

    - name: Install python library
      pip: name={{ item }}
      loop:
        - docker
        - docker-compose

    - name: Add modules
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Update sysctl params
      ansible.posix.sysctl:
        name: "{{ item }}"
        value: '1'
        sysctl_set: yes
      loop:
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables
        - net.ipv4.ip_forward

    - name: Prepare folders
      file: path=/opt/semaphore state=directory mode=0755

    - name: Start semaphore inline definition
      community.docker.docker_compose:
        project_name: semaphore
        definition:
          version: "3.6"
          services:
            traefik:
              image: "traefik:v2.10"
              container_name: "traefik"
              command:
                - "--api.insecure=true"
                - "--providers.docker=true"
                - "--providers.docker.exposedbydefault=false"
                - "--entrypoints.web.address=:80"
                - "--entrypoints.websecure.address=:443"
                - "--certificatesresolvers.le.acme.httpchallenge=true"
                - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
                - "--certificatesresolvers.le.acme.email=sumorokov.k@gmail.com"
                - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
              ports:
                - "80:80"
                - "443:443"
              restart: unless-stopped
              volumes:
                - "traefik_data:/letsencrypt"
                - "/var/run/docker.sock:/var/run/docker.sock:ro"
            db:
              image: postgres:15-alpine
              container_name: "postgres"
              hostname: postgres
              restart: always
              environment:
                POSTGRES_USER: semaphore
                POSTGRES_PASSWORD: semaphore
                POSTGRES_DB: semaphore
              volumes:
                 - semaphore_postgres:/var/lib/postgresql/data
            semaphore:
              image: semaphoreui/semaphore:v2.8.90
              container_name: "semaphore"
              labels:
                - "traefik.enable=true"
                - "traefik.http.services.semaphore.loadbalancer.server.port=3000"
                - "traefik.http.middlewares.semaphore-redirectscheme.redirectscheme.scheme=https"
                - "traefik.http.middlewares.semaphore-redirectscheme.redirectscheme.permanent=true"
                - "traefik.http.routers.semaphore-insecure.rule=Host(`semaphore.clayman.pro`)"
                - "traefik.http.routers.semaphore-insecure.entrypoints=web"
                - "traefik.http.routers.semaphore-insecure.middlewares=semaphore-redirectscheme@docker"
                - "traefik.http.routers.semaphore.rule=Host(`semaphore.clayman.pro`)"
                - "traefik.http.routers.semaphore.entrypoints=websecure"
                - "traefik.http.routers.semaphore.tls.certresolver=le"
              environment:
                SEMAPHORE_DB_USER: semaphore
                SEMAPHORE_DB_PASS: semaphore
                SEMAPHORE_DB_HOST: db
                SEMAPHORE_DB_PORT: 5432
                SEMAPHORE_DB_DIALECT: postgres
                SEMAPHORE_DB: semaphore
                SEMAPHORE_ADMIN_NAME: "{{ lookup('ansible.builtin.env', 'SEMAPHORE_ADMIN_NAME') }}"
                SEMAPHORE_ADMIN_PASSWORD: "{{ lookup('ansible.builtin.env', 'SEMAPHORE_ADMIN_PASSWORD') }}"
                SEMAPHORE_ADMIN_EMAIL: "{{ lookup('ansible.builtin.env', 'SEMAPHORE_ADMIN_EMAIL') }}"
                SEMAPHORE_ADMIN: admin
                SEMAPHORE_ACCESS_KEY_ENCRYPTION: "{{ lookup('ansible.builtin.env', 'SEMAPHORE_ACCESS_KEY_ENCRYPTION') }}"
              depends_on:
                - db
              restart: unless-stopped
              volumes:
                - semaphore_config:/etc/semaphore
                - semaphore_data:/var/lib/semaphore
          networks:
            default:
              driver: bridge
              driver_opts:
                com.docker.network.driver.mtu: 1450
          volumes:
            semaphore_config:
            semaphore_data:
            semaphore_postgres:
            traefik_data:
      register: output

    - name: Show results
      ansible.builtin.debug:
          var: output
